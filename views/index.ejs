<!DOCTYPE html>
<html>
<head>
  <title>Koop Sample App</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css">
  <style>
    .main {
      margin: 2em auto;
      max-width: 800px;
    }
    .input-group { margin-bottom: 10px; }
  </style>
</head>
<body>
  <div class="container main">
    <div class="page-header">
      <h2> Koop <small>v<%= status.version %></small></h2>
    </div>

    <p class="lead">Koop takes data from providers like ArcGIS Online, Socrata, and Github, and serves it as <a href="http://geojson.org">GeoJSON</a> and <a href="http://maps.esri.com/apl4/sdk/rest/featureserver.html">Feature Services</a>.</p>

    <p class="lead">This allows users to query, map, or analyze data from many different sources using the Feature Service API and to easily download that data as GeoJSON.</p>

    <h3>Providers</h3>

    <hr>

    <h4><a href="/gist">Gist</a></h4>

    <p>Gists are accessed by adding the id to <code>/gist/:gist_id</code>, and optionally the Feature Service metadata or query. For example:</p>

    <ul>
      <li>Raw GeoJSON: <a href="/gist/e5c38eee056927975660/">/gist/e5c38eee056927975660</a></li>
      <li>FeatureService: <a href="/gist/e5c38eee056927975660/FeatureServer/0">/gist/e5c38eee056927975660/FeatureServer/0</a></li>
      <li>Query: <a href="/gist/e5c38eee056927975660/FeatureServer/0/query">/gist/e5c38eee056927975660/FeatureServer/0/query</a></li>
    </ul>

    <h4><a href="/github">Github</a></h5>

    <p>Files from Github are accessed with the following pattern: <code>http://:hostname/github/:username/:repository/:path</code></p>

    <ul>
      <li>Raw GeoJSON: <a href="/github/chelm/grunt-geo/forks">/github/chelm/grunt-geo/forks</a></li>
      <li>FeatureService: <a href="/github/chelm/grunt-geo/forks/FeatureServer/0">/github/chelm/grunt-geo/forks/FeatureServer/0</a></li>
      <li>Query: <a href="/github/chelm/grunt-geo/forks/FeatureServer/0/query">/github/chelm/grunt-geo/forks/FeatureServer/0/query</a></li>
      <strong>NOTE</strong>: <code>path</code> parameter uses "::" as the sub-directory seperator. So for example if the file is at <code>github.com/chelm/grunt-geo/tree/master/samples/bower.geojson</code> then the Koop path would look like:
        <a href="/github/chelm/grunt-geo/samples::bower">/github/chelm/grunt-geo/samples::bower</a>
    </ul>

    <h4>See also:</h4>

    <ul>
      <li><a href="/agol">ArcGIS Online</a></li>
      <li><a href="/socrata">Socrata</a></li>
    </ul>

    <h3>Previews</h3>

    <hr>

    <p>Koop can preview any gist or github file using the simple view endpoints:</p>

    <ul>
      <li>Gist: <a href="/gist">/gist</a></li>
      <li>Github: <a href="/github">/github</a></li>
    </ul>

    <h4>Try it out!</h4>

    <div class="input-group">
      <input type="text" id="gist" class="form-control" value="e5c38eee056927975660" placeholder="Enter a gist id">
      <span class="input-group-btn">
        <button class="btn btn-primary" onClick="submitGist()">Map Gist</button>
      </span>
    </div>

    <div class="input-group">
      <input type="text" id="github" class="form-control" value="chelm/grunt-geo/forks" placeholder="Path to a geojson file: user/repo/file">
      <span class="input-group-btn">
        <button class="btn btn-primary" onClick="submitGithub()">Map GitHub</button>
      </span>
    </div>

    <h3>Spatial Queries</h3>

    <hr>

    <p>Example:</p>

    <pre><code><a href="http://koop.dc.esri.com/github/smartchicago/chicago-atlas/db::import::zipcodes/FeatureServer/0/query?geometry=-180,-90,180,90">http://koop.dc.esri.com/github/smartchicago/chicago-atlas/db::import::zipcodes/FeatureServer/0/query?geometry=-180,-90,180,90</a></code></pre>

    <h3>Filter Queries</h3>

    <hr>

    <p>Example:</p>

    <pre><code><a href='http://koop.dc.esri.com/github/smartchicago/chicago-atlas/db::import::zipcodes/FeatureServer/0/query?where=ZIP=60647'>http://koop.dc.esri.com/github/smartchicago/chicago-atlas/db::import::zipcodes/FeatureServer/0/query?where=ZIP=60647</a></code></pre>

    <h3>Query parameters</h3>

    <hr>

    <div class="accordion" id="accordion2">
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse_id">idField*</a>
        </div>
        <div id="collapse_id" class="accordion-body collapse">
          <div class="accordion-inner">
            * the params is specific to koop and is not part of the FeatureService spec
            specifies what field to use as the ObjectID field
            <ul><li><a href="/gist/e5c38eee056927975660/FeatureServer/0/query?idField=id">/geojson/snow/FeatureServer/0/query?idField=id</a></li></ul>
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse_objectid">objectIds</a>
        </div>
        <div id="collapse_objectid" class="accordion-body collapse">
          <div class="accordion-inner">
            returns only the features that match a given objectId
            <ul><li><a href="/gist/e5c38eee056927975660/FeatureServer/0/query?objectIds=1,2,3">/geojson/snow/FeatureServer/0/query?objectIds=1,2,3</a></li></ul>
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse_returncountonly">returnCountOnly (true or false)</a>
        </div>
        <div id="collapse_returncountonly" class="accordion-body collapse">
          <div class="accordion-inner">
            if true, returns only the count of features that would be returned based on other query params
            <ul><li><a href="/gist/e5c38eee056927975660/FeatureServer/0/query?returnCountOnly=true">/geojson/snow/FeatureServer/0/query?returnCountOnly=true</a></li></ul>
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse_returnidsonly">returnIdsOnly (true or false)</a>
        </div>
        <div id="collapse_returnidsonly" class="accordion-body collapse">
          <div class="accordion-inner">
            returns only the Ids of the feature that would be returned based on other params
            <ul><li><a href="/gist/e5c38eee056927975660/FeatureServer/0/query?returnIdsOnly=true">/geojson/snow/FeatureServer/0/query?returnIdsOnly=true</a></li></ul>
          </div>
        </div>
      </div>
      <div class="accordion-group">
        <div class="accordion-heading">
          <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse_geometry">
            geometry (xmin,ymin,xmax,ymax)
          </a>
        </div>
        <div id="collapse_geometry" class="accordion-body collapse">
          <div class="accordion-inner">
            sets a geometry filter and returns only features that are within the given geometry
            <ul><li><a href="/gist/e5c38eee056927975660/FeatureServer/0/query?geometry=-110,30,-106,50">/geojson/snow/FeatureServer/0/query?geometry=-110,30,-106,50</a></li></ul>
          </div>
        </div>
      </div>
    </div>

    <hr>

    <p>See the Koop <a href="https://github.com/esri/koop#readme">README</a> for more information.</p>

  <div>

  <script type="text/javascript" src="//code.jquery.com/jquery-2.1.4.min.js"></script>
  <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  <script>
    function submitGist () {
      var val = document.getElementById('gist').value;
      if (val) {
        go('/gist/' + val + '/preview');
      }
    }

    function submitGithub () {
      var val = document.getElementById('github').value.split('/');
      var user = val.shift();
      var repo = val.shift();

      if (val.length > 1) {
        var path = val.join('::');
      } else {
        var path = val[0];
      }

      if (user && repo && path) {
        go('/github/' + [ user, repo, path ].join('/') + '/preview');
      }
    }

    function go (path) {
      location.href = path;
    }
  </script>
</body>
</html>
